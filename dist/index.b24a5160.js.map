{"mappings":"AAAA,MAAMA,QAAUC,SAASC,cAAa,cAChCC,QAAUF,SAASC,cAAa,cAChCE,OAASH,SAASC,cAAa,aAC/BG,UAAYJ,SAASC,cAAa,gBAClCI,UAAYL,SAASC,cAAa,cAClCK,UAAYN,SAASC,cAAa,cAClCM,KAAOP,SAASC,cAAa,SAC7BO,WAAaR,SAASC,cAAa,eACnCQ,WAAaT,SAASC,cAAa,eACnCS,SAAWV,SAASC,cAAa,aACjCU,SAAWX,SAASC,cAAa,aACjCW,QAAUZ,SAASC,cAAa,YAChCY,QAAUb,SAASC,cAAa,YAChCa,cAAgBd,SAASC,cAAa,oBAEtCc,MAAK,CACTC,cAAe,EACfC,aAAc,EACdC,YAAW,CAAG,EAAG,GACjBC,WAAW,EACXC,SAAU,aAGHC,OACPd,KAAKe,MAAMC,QAAO,OAClBR,MAAMC,cAAgB,EACtBD,MAAMG,YAAW,CAAI,EAAG,GACxBH,MAAME,aAAe,EACrBF,MAAMI,WAAY,EAClBK,oBACAhB,WAAWiB,YAAc,EACzBhB,WAAWgB,YAAc,EACzBf,SAASe,YAAc,EACvBd,SAASc,YAAc,WAOhBC,eACPrB,UAAUsB,UAAUC,OAAM,kBAC1BtB,UAAUqB,UAAUC,OAAM,2BAGnBC,eACiB,IAAxBd,MAAMC,cACDD,MAAMC,cAAgB,EACtBD,MAAMC,cAAgB,WAGpBc,WAAWC,EAASC,EAAUxB,WAAYyB,EAAQxB,YACjC,IAAxBM,MAAMC,cACDgB,EAAQP,YAAcM,EACtBE,EAAMR,YAAcM,WAGlBG,iBACqB,IAAxBnB,MAAMC,gBACRX,UAAUsB,UAAUQ,IAAG,kBACvBvB,QAAQa,YAAW,UAEO,IAAxBV,MAAMC,gBACRV,UAAUqB,UAAUQ,IAAG,kBACvBtB,QAAQY,YAAW,mBAIdD,oBACPnB,UAAUsB,UAAUS,OAAM,kBAC1B9B,UAAUqB,UAAUS,OAAM,kBAC1BxB,QAAQa,YAAW,WACnBZ,QAAQY,YAAW,oBAGZY,aACPvB,cAAcwB,MAAK,GAKrBvC,QAAQwC,iBAAgB,SAAQ,WAC9B,GAAIxB,MAAMI,UAAW,CACnB,MAAMqB,EAAWC,KAAKC,MAAsB,EAAhBD,KAAKE,SAAe,GAChDpC,KAAKe,MAAMC,QAAO,QAClBhB,KAAKqC,aAAY,MAAM,gBAAkBJ,SACzCzB,MAAME,cAAgBuB,EAGtBV,WAAWf,MAAME,cAEA,IAAbuB,IAEFzB,MAAME,aAAe,EAGrBa,WAAW,GAGXD,eAGAH,oBAKNxB,QAAQqC,iBAAgB,SAAQ,WAC9B,GAAIxB,MAAMI,WAAaJ,MAAME,cAAgB,EAAG,CAY9C,GAXAF,MAAMG,YAAYH,MAAMC,gBAAkBD,MAAME,aAEhDV,KAAKe,MAAMC,QAAO,OAGlBO,WAAWf,MAAMG,YAAYH,MAAMC,eAAgBN,SAAUC,UAG7DmB,WAAW,GAGPf,MAAMG,YAAYH,MAAMC,gBAAkBD,MAAMK,gBAElDc,sBACAnB,MAAMI,WAAY,GAKpBU,eAGAd,MAAME,aAAe,EAGrBS,mBAIJvB,OAAOoC,iBAAgB,QAAUlB,MAEjCjB,UAAUmC,iBAAgB,SAAQ,SAAYM,GAC5CA,EAAEC,iBACF,MAAMC,EAAMjC,cAAcwB,MACrBS,IAIoB,IAAvBhC,MAAME,cACgD,IAAtDF,MAAMG,YAAY8B,QAAM,CAAEC,EAAKC,IAAQD,EAAMC,MAE7CnC,MAAMK,UAAY2B,GAEpBV,iBAGFhB","sources":["script.js"],"sourcesContent":["const btnRoll = document.querySelector('.btn--roll');\nconst btnHold = document.querySelector('.btn--hold');\nconst btnNew = document.querySelector('.btn--new');\nconst btnSubmit = document.querySelector('.btn--submit');\nconst playerOne = document.querySelector('.player--0');\nconst playerTwo = document.querySelector('.player--1');\nconst dice = document.querySelector('.dice');\nconst currentOne = document.querySelector('#current--0');\nconst currentTwo = document.querySelector('#current--1');\nconst scoreOne = document.querySelector('#score--0');\nconst scoreTwo = document.querySelector('#score--1');\nconst nameOne = document.querySelector('#name--0');\nconst nameTwo = document.querySelector('#name--1');\nconst inputNewScore = document.querySelector('.input--endscore');\n\nconst state = {\n  currentPlayer: 0,\n  currentScore: 0,\n  totalScores: [0, 0],\n  isPlaying: true,\n  endScore: 60,\n};\n\nfunction init() {\n  dice.style.display = 'none';\n  state.currentPlayer = 0;\n  state.totalScores = [0, 0];\n  state.currentScore = 0;\n  state.isPlaying = true;\n  removeWinnerClass();\n  currentOne.textContent = 0;\n  currentTwo.textContent = 0;\n  scoreOne.textContent = 0;\n  scoreTwo.textContent = 0;\n}\n\n// Reusable functions\n\n//------------------------------------------------------\n\nfunction toggleActive() {\n  playerOne.classList.toggle('player--active');\n  playerTwo.classList.toggle('player--active');\n}\n\nfunction switchPlayer() {\n  state.currentPlayer === 0\n    ? (state.currentPlayer = 1)\n    : (state.currentPlayer = 0);\n}\n\nfunction setContent(content, firstEl = currentOne, secEl = currentTwo) {\n  state.currentPlayer === 0\n    ? (firstEl.textContent = content)\n    : (secEl.textContent = content);\n}\n\nfunction addWinnerClass() {\n  if (state.currentPlayer === 0) {\n    playerOne.classList.add('player--winner');\n    nameOne.textContent = 'WINNER';\n  }\n  if (state.currentPlayer === 1) {\n    playerTwo.classList.add('player--winner');\n    nameTwo.textContent = 'WINNER';\n  }\n}\n\nfunction removeWinnerClass() {\n  playerOne.classList.remove('player--winner');\n  playerTwo.classList.remove('player--winner');\n  nameOne.textContent = 'Player 1';\n  nameTwo.textContent = 'Player 2';\n}\n\nfunction clearInput() {\n  inputNewScore.value = '';\n}\n\n//------------------------------------------------------\n\nbtnRoll.addEventListener('click', function () {\n  if (state.isPlaying) {\n    const diceRoll = Math.trunc(Math.random() * 6 + 1);\n    dice.style.display = 'block';\n    dice.setAttribute('src', `./icons/dice-${diceRoll}.png`);\n    state.currentScore += diceRoll;\n\n    // Set content current\n    setContent(state.currentScore);\n\n    if (diceRoll === 1) {\n      // Set current score back to 0\n      state.currentScore = 0;\n\n      // Set content current\n      setContent(0);\n\n      // Switch player\n      switchPlayer();\n\n      // Toggle active class\n      toggleActive();\n    }\n  }\n});\n\nbtnHold.addEventListener('click', function () {\n  if (state.isPlaying && state.currentScore >= 1) {\n    state.totalScores[state.currentPlayer] += state.currentScore;\n\n    dice.style.display = 'none';\n\n    // Set content total score\n    setContent(state.totalScores[state.currentPlayer], scoreOne, scoreTwo);\n\n    // Set content current\n    setContent(0);\n\n    // Check if score is >= 60\n    if (state.totalScores[state.currentPlayer] >= state.endScore) {\n      // Add winner class\n      addWinnerClass();\n      state.isPlaying = false;\n      return;\n    }\n\n    // Switch player\n    switchPlayer();\n\n    // Set current score back to 0\n    state.currentScore = 0;\n\n    // Toggle active class\n    toggleActive();\n  }\n});\n\nbtnNew.addEventListener('click', init);\n\nbtnSubmit.addEventListener('click', function (e) {\n  e.preventDefault();\n  const val = inputNewScore.value;\n  if (!val) return;\n\n  // To prevent that players can change endscore during game\n  if (\n    state.currentScore === 0 &&\n    state.totalScores.reduce((acc, cur) => acc + cur) === 0\n  )\n    state.endScore = +val;\n\n  clearInput();\n});\n\ninit();\n"],"names":["btnRoll","document","querySelector","btnHold","btnNew","btnSubmit","playerOne","playerTwo","dice","currentOne","currentTwo","scoreOne","scoreTwo","nameOne","nameTwo","inputNewScore","state","currentPlayer","currentScore","totalScores","isPlaying","endScore","init","style","display","removeWinnerClass","textContent","toggleActive","classList","toggle","switchPlayer","setContent","content","firstEl","secEl","addWinnerClass","add","remove","clearInput","value","addEventListener","diceRoll","Math","trunc","random","setAttribute","e","preventDefault","val","reduce","acc","cur"],"version":3,"file":"index.b24a5160.js.map"}